// Code generated by MockGen. DO NOT EDIT.
// Source: web-page-analyzer.go
//
// Generated by this command:
//
//	mockgen -source=web-page-analyzer.go -destination=web-page-analyzer_mock.go -package=utils
//

// Package utils is a generated GoMock package.
package utils

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIWebPageAnalyzer is a mock of IWebPageAnalyzer interface.
type MockIWebPageAnalyzer struct {
	ctrl     *gomock.Controller
	recorder *MockIWebPageAnalyzerMockRecorder
	isgomock struct{}
}

// MockIWebPageAnalyzerMockRecorder is the mock recorder for MockIWebPageAnalyzer.
type MockIWebPageAnalyzerMockRecorder struct {
	mock *MockIWebPageAnalyzer
}

// NewMockIWebPageAnalyzer creates a new mock instance.
func NewMockIWebPageAnalyzer(ctrl *gomock.Controller) *MockIWebPageAnalyzer {
	mock := &MockIWebPageAnalyzer{ctrl: ctrl}
	mock.recorder = &MockIWebPageAnalyzerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIWebPageAnalyzer) EXPECT() *MockIWebPageAnalyzerMockRecorder {
	return m.recorder
}

// AnalyzeWebPage mocks base method.
func (m *MockIWebPageAnalyzer) AnalyzeWebPage(arg0 string) (*Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AnalyzeWebPage", arg0)
	ret0, _ := ret[0].(*Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AnalyzeWebPage indicates an expected call of AnalyzeWebPage.
func (mr *MockIWebPageAnalyzerMockRecorder) AnalyzeWebPage(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AnalyzeWebPage", reflect.TypeOf((*MockIWebPageAnalyzer)(nil).AnalyzeWebPage), arg0)
}
