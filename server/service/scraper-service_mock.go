// Code generated by MockGen. DO NOT EDIT.
// Source: scraper-service.go
//
// Generated by this command:
//
//	mockgen -source=scraper-service.go -destination=scraper-service_mock.go -package=service
//

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	model "github.com/shashikedissanayake/web-page-analyzer/server/model"
	gomock "go.uber.org/mock/gomock"
)

// MockIScraperService is a mock of IScraperService interface.
type MockIScraperService struct {
	ctrl     *gomock.Controller
	recorder *MockIScraperServiceMockRecorder
	isgomock struct{}
}

// MockIScraperServiceMockRecorder is the mock recorder for MockIScraperService.
type MockIScraperServiceMockRecorder struct {
	mock *MockIScraperService
}

// NewMockIScraperService creates a new mock instance.
func NewMockIScraperService(ctrl *gomock.Controller) *MockIScraperService {
	mock := &MockIScraperService{ctrl: ctrl}
	mock.recorder = &MockIScraperServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIScraperService) EXPECT() *MockIScraperServiceMockRecorder {
	return m.recorder
}

// ScrapeWebPage mocks base method.
func (m *MockIScraperService) ScrapeWebPage(arg0 string) (*model.ScraperResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ScrapeWebPage", arg0)
	ret0, _ := ret[0].(*model.ScraperResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ScrapeWebPage indicates an expected call of ScrapeWebPage.
func (mr *MockIScraperServiceMockRecorder) ScrapeWebPage(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ScrapeWebPage", reflect.TypeOf((*MockIScraperService)(nil).ScrapeWebPage), arg0)
}
